language: c

matrix:
  include:
    - compiler: gcc
      env: BUILD=cmake MAKE_OPTION=-j
    - compiler: clang
      env: BUILD=cmake CMAKE_OPTION="-DUSE_VALGRIND=no" CFLAGS=-fsanitize=address
    - compiler: gcc
      env: BUILD=cmake CMAKE_OPTION="-DENABLE_GCOV=yes -DUSE_VALGRIND=no" COVERALLS=yes
    - compiler: gcc
      env: BUILD=cmake CMAKE_OPTION="-DENABLE_GCOV=no -DUSE_VALGRIND=yes"
    - env: BUILD=tarball-dist

before_install: |
  sudo apt-get update -qq

install: |
  sudo add-apt-repository -y "deb http://archive.ubuntu.com/ubuntu/ precise main universe"
  sudo apt-get install -y cmake doxygen python-sphinx gcc make check valgrind
  sudo pip install cpp-coveralls --use-mirrors

# Run the Build script
script:
 - if [ x$BUILD == xcmake ]; then ./CI/build.sh; fi
 - if [ x$BUILD == xtarball-dist ]; then ./CI/tarball.sh; fi

after_success: |
  if [ x$COVERALLS == xyes ]; then \
    coveralls --exclude build/CMakeFiles --exclude doc --exclude cmake --exclude test --exclude libchula/test --exclude-pattern 'CMake[^\.]*\.c(?:pp)?' --exclude-pattern '[^\.]*\.h' || true ;\
  fi

# Notify developers when build passed/failed.
notifications:
  irc:
    template:
      - "%{repository}#%{build_number} %{commit} %{author}: %{message} %{build_url}"
    channels:
      - "irc.freenode.net#cherokee"

env:
  global:
   # The next declration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "U2yh4fEOGida96QloMlZZprLcH5gZHO8v9QJZdzZYCwCd6Fb9RppISiJqC7RrIldaYQkomauHMtlhfLRu88u9d5zZ5S13bgtJDb7NmaXT+xxbny3rcLFsDIxLSBM4w/ZiNaeOPE/nUnVTbuJH3DeLDrLaMV10vLbAfQQuQJ+Yv8="

addons:
  coverity_scan:
    project:
      name: "alobbs/libhpack"
      description: "Header Compression for HTTP/2.0 library"
    notification_email: alvaro@alobbs.com
    build_command: "make debug"
    branch_pattern: coverity
